#include <random>
#include <vector>

#include <Epetra_SerialDenseMatrix.h>
#include <Epetra_SerialDenseVector.h>
#include <Epetra_SerialDenseSolver.h>

using namespace std;

void epetra_solve(vector<double> &matrix, vector<double> &lhs, vector<double> &rhs, int size)
{
    Epetra_SerialDenseMatrix epetra_matrix (View, &matrix[0], size, size, size);
    Epetra_SerialDenseVector epetra_lhs (size);
    Epetra_SerialDenseVector epetra_rhs (View, &rhs[0], size);

    Epetra_SerialDenseSolver solver;

    solver.FactorWithEquilibration (true);
    solver.SetMatrix(epetra_matrix);
    solver.SetVectors(epetra_lhs, epetra_rhs);
    solver.Solve();
    lhs.assign(solver.X(), solver.X() + size);
}

int main()
{
    int size = 10;
    vector<double> matrix(size*size, 0);
    vector<double> lhs(size, 0);
    vector<double> rhs(size, 0);
    
    for (unsigned i=0; i<size; ++i)
    {
        for (unsigned j=0; j<size; ++j)
        {
            matrix[j + i*size] = 2.*i + 3.*j;
        }
        
        rhs[i] = i + 1;
    }

    epetra_solve(matrix, lhs, rhs, size);
}
